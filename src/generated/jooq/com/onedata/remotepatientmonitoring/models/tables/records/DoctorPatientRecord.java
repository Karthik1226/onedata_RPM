/*
 * This file is generated by jOOQ.
 */
package com.onedata.remotepatientmonitoring.models.tables.records;


import com.onedata.remotepatientmonitoring.models.tables.DoctorPatient;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DoctorPatientRecord extends UpdatableRecordImpl<DoctorPatientRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.doctor_patient.doctor_id</code>.
     */
    public DoctorPatientRecord setDoctorId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.doctor_patient.doctor_id</code>.
     */
    public Integer getDoctorId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.doctor_patient.patient_id</code>.
     */
    public DoctorPatientRecord setPatientId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.doctor_patient.patient_id</code>.
     */
    public Integer getPatientId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DoctorPatientRecord
     */
    public DoctorPatientRecord() {
        super(DoctorPatient.DOCTOR_PATIENT);
    }

    /**
     * Create a detached, initialised DoctorPatientRecord
     */
    public DoctorPatientRecord(Integer doctorId, Integer patientId) {
        super(DoctorPatient.DOCTOR_PATIENT);

        setDoctorId(doctorId);
        setPatientId(patientId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DoctorPatientRecord
     */
    public DoctorPatientRecord(com.onedata.remotepatientmonitoring.models.tables.pojos.DoctorPatient value) {
        super(DoctorPatient.DOCTOR_PATIENT);

        if (value != null) {
            setDoctorId(value.getDoctorId());
            setPatientId(value.getPatientId());
            resetChangedOnNotNull();
        }
    }
}
