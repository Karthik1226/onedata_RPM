plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'nu.studer.jooq' version '9.0'
	id 'org.flywaydb.flyway' version '9.22.3'
}

group = 'com.onedata'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	flywayMigration
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'org.postgresql:postgresql'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	flywayMigration "org.postgresql:postgresql:42.7.1"
	jooqGenerator "org.postgresql:postgresql:42.7.1"
}


tasks.named('test') {
	useJUnitPlatform()
}
flyway {
	configurations = ['flywayMigration']
	url = 'jdbc:postgresql://localhost:5433/patientrpm'
	user = 'postgres'
	password = 'Onedata@6161'
	schemas = ['public']
}
jooq {
	version = dependencyManagement.importedProperties['jooq.version']
	edition = nu.studer.gradle.jooq.JooqEdition.OSS
	configurations {
		main {
			generateSchemaSourceOnCompilation = false
			generationTool {
				logging = org.jooq.meta.jaxb.Logging.WARN
				jdbc {
					driver = 'org.postgresql.Driver'
					url = flyway.url
					user = flyway.user
					password = flyway.password
				}
				generator {
					name = 'org.jooq.codegen.DefaultGenerator'
					database {
						name = 'org.jooq.meta.postgres.PostgresDatabase'
						inputSchema = 'public'
						excludes = 'flyway_schema_history'
					}
					generate {
						deprecated = false
						records = true
						pojos = true
						fluentSetters = true
					}
					target {
						packageName = "${group}.${project.name.replace(Map.of("-", "", "_", ""))}.models"
						directory = "src/generated/jooq"
					}
					strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
				}
			}
		}
	}
}
tasks.named('generateJooq').configure {
	dependsOn tasks.named('flywayMigrate')

	inputs.files(fileTree('src/main/resources/db/migration'))
			.withPropertyName('migrations')
			.withPathSensitivity(PathSensitivity.RELATIVE)
	allInputsDeclared = true
}
/*
tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += ['-parameters']
}*/
